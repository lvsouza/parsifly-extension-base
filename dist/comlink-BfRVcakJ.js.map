{"version":3,"file":"comlink-BfRVcakJ.js","sources":["../node_modules/comlink/dist/esm/comlink.mjs"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n"],"names":["proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","obj","port1","port2","expose","port","wrap","throwTransferHandler","value","serialized","transferHandlers","isAllowedOrigin","allowedOrigins","origin","allowedOrigin","ep","callback","ev","id","type","path","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfer","wireValue","transferables","toWireValue","closeEndPoint","error","isMessagePort","endpoint","target","pendingListeners","data","resolver","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","newCount","registerProxy","unregisterProxy","isProxyReleased","_target","r","p","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","processed","v","transferCache","transfers","name","handler","serializedValue","msg","resolve","generateUUID"],"mappings":"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","x_google_ignoreList":[0]}