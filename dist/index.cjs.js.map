{"version":3,"file":"index.cjs.js","sources":["../src/lib/shared/components/PlatformActions.ts","../src/lib/shared/providers/ListProvider.ts","../src/lib/shared/components/TabsView.ts","../src/lib/shared/components/TabView.ts","../src/lib/shared/components/Action.ts","../src/lib/shared/components/Editor.ts","../src/lib/shared/components/View.ts","../node_modules/comlink/dist/esm/comlink.mjs","../src/lib/Envs.ts","../src/lib/shared/services/EventLink.ts","../src/lib/data-providers/index.ts","../src/lib/ExtensionBase.ts","../src/lib/shared/components/ListViewItem.ts","../src/lib/shared/components/Parser.ts"],"sourcesContent":["type TBaseAction = {\n  key: string;\n};\n\ntype TSingleAction = {\n  action(): Promise<void>;\n};\n\ntype TMultiAction = {\n  actions: (TBaseAction & TSingleAction)[];\n};\n\nexport type TPlatformAction = TBaseAction & (TSingleAction | TMultiAction);\n\nexport class PlatformAction {\n  key: TPlatformAction['key'];\n  action?: TSingleAction['action'];\n  actions?: TMultiAction['actions'];\n\n  constructor(props: TPlatformAction) {\n    this.key = props.key;\n\n    if ('action' in props) {\n      this.action = props.action;\n    }\n\n    if ('actions' in props) {\n      this.actions = props.actions;\n    }\n  }\n\n  isSingle(): this is TBaseAction & TSingleAction {\n    return typeof this.action === 'function';\n  }\n\n  isMulti(): this is TBaseAction & TMultiAction {\n    return Array.isArray(this.actions);\n  }\n}\n","import { ListViewItem } from '../components/ListViewItem';\n\n\ninterface IListProviderProps {\n  key: string;\n  onItemClick?: (item: ListViewItem) => Promise<void>;\n  onItemDoubleClick?: (item: ListViewItem) => Promise<void>;\n  getItems: (item?: ListViewItem) => Promise<ListViewItem[]>;\n}\nexport class ListProvider {\n  public readonly key: IListProviderProps['key'];\n  public readonly getItems: IListProviderProps['getItems'];\n  public readonly onItemClick: IListProviderProps['onItemClick'];\n  public readonly onItemDoubleClick: IListProviderProps['onItemDoubleClick'];\n\n  constructor(props: IListProviderProps) {\n    this.key = props.key;\n    this.getItems = props.getItems;\n    this.onItemClick = props.onItemClick;\n    this.onItemDoubleClick = props.onItemDoubleClick;\n  }\n}\n","import { TabView } from './TabView';\nimport { Action } from './Action';\n\n\ninterface ITabsViewProps {\n  key: string;\n  tabs: TabView[];\n  actions?: Action[];\n}\nexport class TabsView {\n  public readonly key: ITabsViewProps['key'];\n  public readonly tabs: ITabsViewProps['tabs'];\n  public readonly actions: ITabsViewProps['actions'];\n\n  constructor(props: ITabsViewProps) {\n    this.key = props.key;\n    this.tabs = props.tabs;\n    this.actions = props.actions;\n  }\n}\n","import { ListProvider } from '../providers/ListProvider';\n\n\ninterface ITabViewProps {\n  key: string;\n  dataProvider: ListProvider;\n}\nexport class TabView {\n  public readonly key: ITabViewProps['key'];\n  public readonly dataProvider: ITabViewProps['dataProvider'];\n\n  constructor(props: ITabViewProps) {\n    this.key = props.key;\n    this.dataProvider = props.dataProvider;\n  }\n}\n","\ninterface IActionProps {\n  key: string;\n  action(): Promise<void>;\n}\nexport class Action {\n  public readonly key: IActionProps['key'];\n  public readonly action: IActionProps['action'];\n\n  constructor(props: IActionProps) {\n    this.key = props.key;\n    this.action = props.action;\n  }\n}\n","import { Action } from './Action';\n\n\ninterface IEditorProps {\n  key: string;\n  actions?: Action[];\n  onDidReceiveMessage?: (...values: unknown[]) => Promise<void>;\n}\nexport class Editor {\n  private readonly _messageSenderListeners = new Map<string, ((...values: unknown[]) => Promise<unknown>)>();\n\n\n  public readonly key: IEditorProps['key'];\n  public readonly actions: IEditorProps['actions'];\n  public readonly onDidReceiveMessage: IEditorProps['onDidReceiveMessage'];\n\n\n  public readonly webView = {\n    sendMessage: async (...values: unknown[]) => {\n      this._messageSenderListeners.forEach(listener => listener(...values));\n    },\n  } as const\n\n  constructor(props: IEditorProps) {\n    this.key = props.key;\n    this.actions = props.actions;\n    this.onDidReceiveMessage = props.onDidReceiveMessage;\n  }\n\n\n  public __internal_subscribeToSend(key: string, fn: ((...values: unknown[]) => Promise<unknown>)) {\n    this._messageSenderListeners.set(key, fn);\n  }\n  public __internal_removeSubscribeToSend(key: string) {\n    this._messageSenderListeners.delete(key);\n  }\n}\n","import { ListProvider } from '../providers/ListProvider';\nimport { Action } from './Action';\n\n\ninterface IViewProps {\n  key: string;\n  actions?: Action[];\n  dataProvider: ListProvider;\n}\nexport class View {\n  public readonly key: IViewProps['key'];\n  public readonly actions: IViewProps['actions'];\n  public readonly dataProvider: IViewProps['dataProvider'];\n\n  constructor(props: IViewProps) {\n    this.key = props.key;\n    this.actions = props.actions;\n    this.dataProvider = props.dataProvider;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","\n\nexport const Envs = {\n  DEBUG: false,\n};\n","import * as ComLink from 'comlink';\n\nimport { Envs } from '../../Envs';\n\n\ntype TEvent<GParams = unknown, GReturn = unknown> = (...params: GParams[]) => Promise<GReturn>;\n\nexport class EventLink {\n  private _events: Map<string, TEvent<any, any>> = new Map();\n  private _studioWrapper: Record<'callEvent', (...args: unknown[]) => Promise<unknown>>;\n\n\n  constructor() {\n    ComLink.expose({ callEvent: this._callExtensionEvent.bind(this) });\n\n    this._studioWrapper = ComLink.wrap(self as any);\n  }\n\n\n  public setExtensionEvent<GParams = unknown, GReturn = unknown>(key: string, event: TEvent<GParams, GReturn>) {\n    this._events.set(key, event);\n  }\n  public removeExtensionEvent(key: string) {\n    this._events.delete(key);\n  }\n\n  public async callStudioEvent<GParams = unknown, GReturn = unknown>(key: string, ...params: GParams[]): Promise<GReturn> {\n    return this._studioWrapper.callEvent(key, ...params) as Promise<GReturn>;\n  }\n\n\n  private async _callExtensionEvent<GParams = unknown, GReturn = unknown>(key: string, ...params: GParams[]): Promise<GReturn> {\n    const event = this._events.get(key);\n\n    if (Envs.DEBUG) {\n      console.log(this._events.keys());\n    }\n\n    if (!event) {\n      throw new Error(`[EXTENSION] Event with key \"${key}\" was not found.`);\n    }\n\n    return event(...params);\n  }\n}\n","import { EventLink } from '../shared/services/EventLink';\nimport { IComponent } from './interfaces/IComponent';\nimport { IProject } from './interfaces/IProject';\nimport { IService } from './interfaces/IService';\nimport { IPage } from './interfaces/IPage';\n\n\n\nexport const createDataProviders = (eventLink: EventLink) => {\n  return {\n    /**\n     * Allow you to call a custom command from application\n     * \n     * @param key Name of the command\n     * @param args List of arguments to be forwarded to the command call\n     */\n    callCustomDataProvider: async <GParam = unknown, GReturn = unknown>(key: string, ...args: GParam[]): Promise<GReturn> => {\n      return await eventLink.callStudioEvent(key, ...args);\n    },\n    /**\n     * Allow you to get the entire project object or get parts with ...project.pages(), .services(), .components() and more.\n     */\n    project: Object.assign(\n      async (): Promise<IProject<'application' | 'package'>> => {\n        return await eventLink.callStudioEvent<void, IProject<'application' | 'package'>>('project:get');\n      },\n      {\n        set: async (project: IProject<'application' | 'package'>): Promise<void> => {\n          return await eventLink.callStudioEvent<IProject<'application' | 'package'>, void>('project:set', project);\n        },\n\n        pages: Object.assign(\n          async (): Promise<IPage[]> => {\n            return await eventLink.callStudioEvent<void, IPage[]>('project.pages:get');\n          },\n          async (index: number): Promise<IPage> => {\n            return await eventLink.callStudioEvent<number, IPage>('project.pages:get', index);\n          },\n          {\n            set: async (page: IPage, index: number): Promise<void> => {\n              return await eventLink.callStudioEvent<IPage | number, void>('project.pages:set', page, index);\n            },\n            add: Object.assign(\n              async (page: IPage): Promise<void> => {\n                return await eventLink.callStudioEvent<IPage, void>('project.pages:add', page);\n              },\n              async (page: IPage, index: number): Promise<void> => {\n                return await eventLink.callStudioEvent<IPage | number, void>('project.pages:add', page, index);\n              },\n            ),\n            del: Object.assign(\n              async (): Promise<void> => {\n                return await eventLink.callStudioEvent<void, void>('project.pages:del');\n              },\n              async (index: number): Promise<void> => {\n                return await eventLink.callStudioEvent<number, void>('project.pages:del', index);\n              },\n            )\n          }\n        ),\n        components: Object.assign(\n          async (): Promise<IComponent[]> => {\n            return await eventLink.callStudioEvent<void, IComponent[]>('project.components:get');\n          },\n          async (index: number): Promise<IComponent> => {\n            return await eventLink.callStudioEvent<number, IComponent>('project.components:get', index);\n          },\n          {\n            set: async (component: IComponent, index: number): Promise<void> => {\n              return await eventLink.callStudioEvent<IComponent | number, void>('project.components:set', component, index);\n            },\n            add: Object.assign(\n              async (component: IComponent): Promise<void> => {\n                return await eventLink.callStudioEvent<IComponent, void>('project.components:add', component);\n              },\n              async (component: IComponent, index: number): Promise<void> => {\n                return await eventLink.callStudioEvent<IComponent | number, void>('project.components:add', component, index);\n              },\n            ),\n            del: Object.assign(\n              async (): Promise<void> => {\n                return await eventLink.callStudioEvent<void, void>('project.components:del');\n              },\n              async (index: number): Promise<void> => {\n                return await eventLink.callStudioEvent<number, void>('project.components:del', index);\n              },\n            )\n          }\n        ),\n        services: Object.assign(\n          async (): Promise<IService[]> => {\n            return await eventLink.callStudioEvent<void, IService[]>('project.services:get');\n          },\n          async (index: number): Promise<IService> => {\n            return await eventLink.callStudioEvent<number, IService>('project.services:get', index);\n          },\n          {\n            set: async (service: IService, index: number): Promise<void> => {\n              return await eventLink.callStudioEvent<IService | number, void>('project.services:set', service, index);\n            },\n            add: Object.assign(\n              async (service: IService): Promise<void> => {\n                return await eventLink.callStudioEvent<IService, void>('project.services:add', service);\n              },\n              async (service: IService, index: number): Promise<void> => {\n                return await eventLink.callStudioEvent<IService | number, void>('project.services:add', service, index);\n              },\n            ),\n            del: Object.assign(\n              async (): Promise<void> => {\n                return await eventLink.callStudioEvent<void, void>('project.services:del');\n              },\n              async (index: number): Promise<void> => {\n                return await eventLink.callStudioEvent<number, void>('project.services:del', index);\n              },\n            )\n          }\n        ),\n      }\n    ),\n  } as const;\n}\n","import { PlatformAction } from './shared/components/PlatformActions';\r\nimport { TabsView } from './shared/components/TabsView';\r\nimport { EventLink } from './shared/services/EventLink';\r\nimport { createDataProviders } from './data-providers';\r\nimport { TFileOrFolder } from './types/TFileOrFolder';\r\nimport { Parser } from './shared/components/Parser';\r\nimport { Editor } from './shared/components/Editor';\r\nimport { TQuickPick } from './types/TQuickPick';\r\nimport { View } from './shared/components/View';\r\n\r\n\r\nexport abstract class ExtensionBase {\r\n  private _eventLink: EventLink = new EventLink();\r\n\r\n\r\n  constructor() {\r\n    this._eventLink.setExtensionEvent('activate', this.activate.bind(this));\r\n    this._eventLink.setExtensionEvent('deactivate', this.deactivate.bind(this));\r\n  }\r\n\r\n\r\n  /**\r\n   * Automatically called when the extension start.\r\n   */\r\n  async activate(): Promise<void> {\r\n    console.log('Extension activated (base implementation).');\r\n  }\r\n\r\n  /**\r\n   * Automatically called when the extension stop.\r\n   */\r\n  async deactivate(): Promise<void> {\r\n    console.log('Extension deactivated (base implementation).');\r\n  }\r\n\r\n  public readonly application = {\r\n    platformActions: {\r\n      register: (platformAction: PlatformAction) => {\r\n        if (platformAction.action) {\r\n          this._eventLink.setExtensionEvent(`platformActions:${platformAction.key}`, platformAction.action);\r\n        } else if (platformAction.actions) {\r\n          platformAction.actions.forEach(action => {\r\n            this._eventLink.setExtensionEvent(`platformActions:${platformAction.key}:actions:${action.key}`, action.action);\r\n          });\r\n        }\r\n      },\r\n      unregister: (platformAction: PlatformAction) => {\r\n        if (platformAction.action) {\r\n          this._eventLink.removeExtensionEvent(`platformActions:${platformAction.key}`);\r\n        } else if (platformAction.actions) {\r\n          platformAction.actions.forEach(action => {\r\n            this._eventLink.removeExtensionEvent(`platformActions:${platformAction.key}:actions:${action.key}`);\r\n          });\r\n        }\r\n      },\r\n    },\r\n    parsers: {\r\n      register: (parser: Parser) => {\r\n        this._eventLink.setExtensionEvent(`parsers:${parser.key}`, parser.parser);\r\n      },\r\n      unregister: (parser: Parser) => {\r\n        this._eventLink.removeExtensionEvent(`parsers:${parser.key}`);\r\n      },\r\n    },\r\n    views: {\r\n      refresh: async (view: View | TabsView) => {\r\n        await this._eventLink.callStudioEvent(`views:${view.key}:refresh`);\r\n      },\r\n      register: (view: View | TabsView) => {\r\n        if (view instanceof TabsView) {\r\n          view.tabs.forEach(tabView => {\r\n            this._eventLink.setExtensionEvent(`views:${view.key}:tabsView:${tabView.key}:loadItems:${tabView.dataProvider.key}`, tabView.dataProvider.getItems);\r\n            if (tabView.dataProvider.onItemClick) this._eventLink.setExtensionEvent(`views:${view.key}:tabsView:${tabView.key}:onItemClick:${tabView.dataProvider.key}`, tabView.dataProvider.onItemClick);\r\n            if (tabView.dataProvider.onItemDoubleClick) this._eventLink.setExtensionEvent(`views:${view.key}:tabsView:${tabView.key}:onItemDoubleClick:${tabView.dataProvider.key}`, tabView.dataProvider.onItemDoubleClick);\r\n          })\r\n          view.actions?.forEach(action => {\r\n            this._eventLink.setExtensionEvent(`views:${view.key}:actions:${action.key}`, action.action);\r\n          });\r\n        } else {\r\n          this._eventLink.setExtensionEvent(`views:${view.key}:loadItems:${view.dataProvider.key}`, view.dataProvider.getItems);\r\n          if (view.dataProvider.onItemClick) this._eventLink.setExtensionEvent(`views:${view.key}:onItemClick:${view.dataProvider.key}`, view.dataProvider.onItemClick);\r\n          if (view.dataProvider.onItemDoubleClick) this._eventLink.setExtensionEvent(`views:${view.key}:onItemDoubleClick:${view.dataProvider.key}`, view.dataProvider.onItemDoubleClick);\r\n          view.actions?.forEach(action => {\r\n            this._eventLink.setExtensionEvent(`views:${view.key}:actions:${action.key}`, action.action);\r\n          });\r\n        }\r\n      },\r\n      unregister: (view: View | TabsView) => {\r\n        if (view instanceof TabsView) {\r\n          view.tabs.forEach(tabView => {\r\n            this._eventLink.removeExtensionEvent(`views:${view.key}:tabsView:${tabView.key}:loadItems:${tabView.dataProvider.key}`);\r\n            if (tabView.dataProvider.onItemClick) this._eventLink.removeExtensionEvent(`views:${view.key}:tabsView:${tabView.key}:onItemClick:${tabView.dataProvider.key}`);\r\n            if (tabView.dataProvider.onItemDoubleClick) this._eventLink.removeExtensionEvent(`views:${view.key}:tabsView:${tabView.key}:onItemDoubleClick:${tabView.dataProvider.key}`);\r\n          })\r\n          view.actions?.forEach(action => {\r\n            this._eventLink.removeExtensionEvent(`views:${view.key}:actions:${action.key}`);\r\n          });\r\n        } else {\r\n          this._eventLink.removeExtensionEvent(`views:${view.key}:loadItems:${view.dataProvider.key}`);\r\n          if (view.dataProvider.onItemClick) this._eventLink.removeExtensionEvent(`views:${view.key}:onItemClick:${view.dataProvider.key}`);\r\n          if (view.dataProvider.onItemDoubleClick) this._eventLink.removeExtensionEvent(`views:${view.key}:onItemDoubleClick:${view.dataProvider.key}`);\r\n          view.actions?.forEach(action => {\r\n            this._eventLink.removeExtensionEvent(`views:${view.key}:actions:${action.key}`);\r\n          });\r\n        }\r\n      },\r\n    },\r\n    editors: {\r\n      /**\r\n       * Allow you to open a item in a editor based on the item type\r\n       * \r\n       * @param key Identifier of a item to be opened for some editor\r\n       */\r\n      open: async (key: string) => {\r\n        await this._eventLink.callStudioEvent(`editors:open`, key);\r\n      },\r\n      register: (view: Editor) => {\r\n        this._eventLink.setExtensionEvent(`editors:${view.key}:forwardEvents:receive`, async (...values) => view.onDidReceiveMessage?.(...values));\r\n\r\n        view.__internal_subscribeToSend(`editors:${view.key}:forwardEvents:send`, async (...values) => {\r\n          return await this._eventLink.callStudioEvent(`editors:${view.key}:forwardEvents:send`, ...values);\r\n        });\r\n\r\n        view.actions?.forEach(action => {\r\n          this._eventLink.setExtensionEvent(`editors:${view.key}:actions:${action.key}`, action.action);\r\n        });\r\n      },\r\n      unregister: (view: Editor) => {\r\n        this._eventLink.removeExtensionEvent(`editors:${view.key}:forwardEvents:receive`);\r\n\r\n        view.__internal_removeSubscribeToSend(`editors:${view.key}:forwardEvents:send`);\r\n\r\n        view.actions?.forEach(action => {\r\n          this._eventLink.removeExtensionEvent(`editors:${view.key}:actions:${action.key}`);\r\n        });\r\n      },\r\n    },\r\n    commands: {\r\n      /**\r\n       * Allow you to call a custom command from application\r\n       * \r\n       * @param key Name of the command\r\n       * @param args List of arguments to be forwarded to the command call\r\n       */\r\n      callCustomCommand: async <GParam = unknown, GReturn = unknown>(key: string, ...args: GParam[]): Promise<GReturn> => {\r\n        return await this._eventLink.callStudioEvent(key, ...args);\r\n      },\r\n      /**\r\n       * Allow you to download some content in a file\r\n       * \r\n       * @param fileName Name of the generated file\r\n       * @param fileType extension of the file\r\n       * @param fileContent file content in string\r\n       */\r\n      downloadFile: async (fileName: string, fileType: string, fileContent: string): Promise<void> => {\r\n        return await this._eventLink.callStudioEvent<string, void>('download:file', fileName, fileType, fileContent);\r\n      },\r\n      /**\r\n       * Allow you to download a lot of files and folders as zip\r\n       * \r\n       * @param downloadName Name of the download as zip\r\n       * @param files List of files or folders to download\r\n       */\r\n      downloadFiles: async (downloadName: string, files: TFileOrFolder[]): Promise<void> => {\r\n        return await this._eventLink.callStudioEvent<string | TFileOrFolder[], void>('download:files', downloadName, files);\r\n      },\r\n      /**\r\n       * Grouped methods to editor configuration\r\n       */\r\n      editor: {\r\n        /**\r\n         * Allow to show some feedback to the platform user\r\n         * \r\n         * @param message Message of the feedback\r\n         * @param type type of the feedback\r\n         */\r\n        feedback: async (message: string, type: \"warning\" | \"success\" | \"error\" | \"info\"): Promise<void> => {\r\n          return await this._eventLink.callStudioEvent<string, void>('editor:feedback', message, type);\r\n        },\r\n        /**\r\n         * Allow to capture user freeform text input\r\n         * \r\n         * @param props Props to configure the quick pick\r\n         */\r\n        showQuickPick: async (props: TQuickPick): Promise<string | void> => {\r\n          return await this._eventLink.callStudioEvent<TQuickPick, string | void>('editor:quickPick:show', props);\r\n        },\r\n        /**\r\n         * Allow to set primary side bar view by key\r\n         * \r\n         * @param key Key to identify the view to show in the side bar\r\n         */\r\n        showPrimarySideBarByKey: async (key: string): Promise<void> => {\r\n          return await this._eventLink.callStudioEvent<string, void>('editor:primarySideBar:showByKey', key);\r\n        },\r\n        /**\r\n         * Allow to set secondary side bar view by key\r\n         * \r\n         * @param key Key to identify the view to show in the side bar\r\n         */\r\n        showSecondarySideBarByKey: async (key: string): Promise<void> => {\r\n          return await this._eventLink.callStudioEvent<string, void>('editor:secondarySideBar:showByKey', key);\r\n        },\r\n      }\r\n    },\r\n    dataProviders: createDataProviders(this._eventLink),\r\n  } as const;\r\n}\r\n","\ntype TListItemBase = {\n  /** Identifier */\n  key: string;\n  /** VS Code icons */\n  icon?: string;\n  /** Show additional information in bold */\n  extra?: string;\n  /** Details of the record */\n  description?: string;\n}\n\ntype TListItemWithTitle = {\n  label?: undefined;\n  children?: false | undefined;\n  /** Title, main information for the record  */\n  title: string;\n}\n\ntype TListItemWithLabel = {\n  /** Label, main information for the record  */\n  label: string;\n  title?: undefined;\n  /** Define if a item can have a children list */\n  children: boolean;\n}\n\nexport type TListViewItem = (TListItemWithLabel | TListItemWithTitle) & TListItemBase;\n\nexport class ListViewItem {\n  public readonly key: TListItemBase['key'];\n  public readonly icon?: TListItemBase['icon'];\n  public readonly extra?: TListItemBase['extra'];\n  public readonly description?: TListItemBase['description'];\n\n  public readonly title?: TListViewItem['title'];\n  public readonly label?: TListViewItem['label'];\n  public readonly children?: TListViewItem['children'];\n\n\n  constructor(props: TListViewItem) {\n    this.key = props.key;\n    this.icon = props.icon;\n    this.extra = props.extra;\n    this.description = props.description;\n\n    if ('title' in props && props.title !== undefined) {\n      this.title = props.title;\n    }\n\n    if ('label' in props && props.label !== undefined) {\n      this.label = props.label;\n    }\n\n    if ('children' in props && props.children !== undefined) {\n      this.children = props.children;\n    }\n\n    if ((this.title && this.label) || (!this.title && !this.label)) {\n      throw new Error(\"ListViewItem must have either a `title` or a `label`, but not both.\");\n    }\n  }\n}\n","import { TFileOrFolder } from '../../types/TFileOrFolder';\n\n\ntype TParserResult = {\n  name: string;\n  content: string | TFileOrFolder;\n}\n\nexport type TParser = {\n  key: string;\n  parser: () => Promise<TParserResult>;\n}\nexport class Parser {\n  public readonly key: TParser['key'];\n  public readonly parser: TParser['parser'];\n\n  constructor(props: TParser) {\n    this.key = props.key;\n    this.parser = props.parser;\n  }\n}\n"],"names":["PlatformAction","props","ListProvider","TabsView","TabView","Action","Editor","values","listener","key","fn","View","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","obj","port1","port2","expose","port","wrap","throwTransferHandler","value","serialized","transferHandlers","isAllowedOrigin","allowedOrigins","origin","allowedOrigin","ep","callback","ev","id","type","path","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfer","wireValue","transferables","toWireValue","closeEndPoint","error","isMessagePort","endpoint","target","pendingListeners","data","resolver","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","newCount","registerProxy","unregisterProxy","isProxyReleased","_target","r","p","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","processed","v","transferCache","transfers","name","handler","serializedValue","msg","resolve","generateUUID","Envs","EventLink","ComLink.expose","ComLink.wrap","event","params","createDataProviders","eventLink","args","project","index","page","component","service","ExtensionBase","platformAction","action","parser","view","tabView","_a","_b","fileName","fileType","fileContent","downloadName","files","message","ListViewItem","Parser"],"mappings":"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","x_google_ignoreList":[7]}